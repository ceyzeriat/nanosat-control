[{"desc": "Picsat receives a message (up to 10 chars) and replies with the same message", "lparam": 10, "pid": "l1commanager", "param": [["message", "message", "*", "str", "10", "ASCII", "abcdefghij"]], "name": "echoL1", "subsystem": "obc", "number": 300}, {"desc": "Triggers transmission of all l1 HK", "lparam": 1, "pid": "l1commanager", "param": [["part", "part of the L1 HK to get (part1 or part2)", "1_2", "uint8", "1", "", ""]], "name": "getL1Hk", "subsystem": "all_l0", "number": 301}, {"desc": "Use I2C to forward a commad to a subsystem, directly on the I2C address", "lparam": 7, "pid": "l1commanager", "param": [["address", "I2C address", "*", "int32", "1", "", ""], ["busDataSize", "allowed values: 1;(TCPACKET_MAX_DATA_SIZE-6)", "*", "uint16", "1", "", ""], ["busData", "uint8[busDataSize]", "*", "uint8", "*", "", ""]], "name": "i2cWriteL1", "subsystem": "obc", "number": 302}, {"desc": "Use I2C to forward a commad to a subsystem, directly on the I2C address, then reads I2C after a delay and emits the reply in a telemetry", "lparam": 4, "pid": "l1commanager", "param": [["address", "I2C address", "*", "int32", "1", "", ""]], "name": "i2cWriteReadL1", "subsystem": "obc", "number": 303}, {"desc": "SetPeriods for HK and processing tasks (zero for no change)", "lparam": 7, "pid": "l1commanager", "param": [["TimerProc", "ProcessingPeriodTimer", "0_255", "uint8", "1", "timerPeriod", ""], ["TimerL1Hk", "HousekeepingPeriodTimer", "0_255", "uint8", "1", "timerPeriod", ""], ["hkStandardPeriod", "PC_AdcsHkStandard", "0_255", "uint8", "1", "timerPeriod", ""], ["hkActuatorPeriod", "PC_AdcsHkActuator", "0_255", "uint8", "1", "timerPeriod", ""], ["hkSensorPeriod", "PC_AdcsHkSensor", "0_255", "uint8", "1", "timerPeriod", ""], ["hkAttitudePeriod", "PC_AdcsHkAttitude", "0_255", "uint8", "1", "seconds", ""], ["hkL1OBCPeriod", "PC_L1HouseKeeping", "0_255", "uint8", "1", "seconds", ""]], "name": "setL1Periods", "subsystem": "obc", "number": 304}, {"desc": "GetPeriods for HK and processing tasks", "lparam": 0, "pid": "l1commanager", "param": [], "name": "getL1Periods", "subsystem": "obc", "number": 305}, {"desc": "Set Substates of L1 processes (zero for no change)", "lparam": 4, "pid": "l1commanager", "param": [["sstateProc", "1 for no reduction- 2 for reduction- 3 for reduction and direct sending of light version of data", "0_255", "uint8", "1", "", ""], ["sstatePldCom", "1 to disable UART - 2 for Payload Bootloader - 3 for science", "0_255", "uint8", "1", "", ""], ["sstateDataMgm", "1 to send basic data - 2 to also send science data", "0_255", "uint8", "1", "", ""], ["sstateSdCard", "1 to use SD Card - 2 to not use SD Card", "0_255", "uint8", "1", "", ""]], "name": "setL1Substates", "subsystem": "obc", "number": 306}, {"desc": "Get Substates of L1 processes (Processing, UART, DataManagement and SD card processes)", "lparam": 0, "pid": "l1commanager", "param": [], "name": "getL1Substates", "subsystem": "obc", "number": 307}, {"desc": "Clear all action scheduled to a later time (rest fifo)", "lparam": 0, "pid": "l1commanager", "param": [], "name": "clearL1SchedulerFifo", "subsystem": "obc", "number": 308}, {"desc": "Trigger downloading of all scheduled data (for verification)", "lparam": 0, "pid": "l1commanager", "param": [], "name": "getL1SchedulerFifo", "subsystem": "obc", "number": 309}, {"desc": "Select some data to download", "lparam": "*", "pid": "l1datamanager", "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of starting range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""], ["sequenceID", "sequence of ID (if nul -> all data will be retreived)", "0_16383", "uint16", "*", "", ""]], "name": "getL1Data", "subsystem": "obc", "number": 310}, {"desc": "Select some data to download", "lparam": 13, "pid": "l1datamanager", "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""]], "name": "getL1DataCounter", "subsystem": "obc", "number": 311}, {"desc": "clear science Fifo of what there is to download", "lparam": 0, "pid": "l1datamanager", "param": [], "name": "clearL1DataManager", "subsystem": "obc", "number": 312}, {"desc": "Select some data to download", "lparam": "*", "pid": "l1datamanager", "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""], ["sequenceID", "sequence of ID (if nul -> all data will be retreived)", "0_16383", "uint16", "*", "", ""]], "name": "sdGetL1Data", "subsystem": "obc", "number": 313}, {"desc": "Select some data to download", "lparam": 13, "pid": "l1datamanager", "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""]], "name": "sdGetL1DataCounter", "subsystem": "obc", "number": 314}, {"desc": "ls file  (accept ? in the datastring as a character)", "lparam": "*", "pid": "l1datamanager", "param": [["pathToFile", "string with name of path to files", "*", "str", "*", "", "toto?.d*"]], "name": "sdLsFile", "subsystem": "obc", "number": 315}, {"desc": "rm file from SD (accept ? in the datastring as a character)", "lparam": "*", "pid": "l1datamanager", "param": [["pathToFile", "string with name of a file to be deleted", "*", "str", "*", "", "toto?.d*"]], "name": "sdRmFile", "subsystem": "obc", "number": 316}, {"desc": "format sd card", "lparam": 0, "pid": "l1datamanager", "param": [], "name": "sdFormat", "subsystem": "obc", "number": 317}, {"desc": "Number of files to be stored according to category (zero for no change)", "lparam": 20, "pid": "l1datamanager", "param": [["mfnHkPld", "Maximum files of HK from payload", "*", "uint32", "1", "", ""], ["mfnLowFreq", "Maximum files of Low frequency (reduced) data", "*", "uint32", "1", "", ""], ["mfnHighFreq", "Maximum files of High frequency (raw) data", "*", "uint32", "1", "", ""], ["mfnTechno", "Maximum files of TEchno files from payload (ack, etc...)", "*", "uint32", "1", "", ""], ["mfnHkL1", "Maximum files of HK from L1", "*", "uint32", "1", "", ""]], "name": "sdSetFileLimit", "subsystem": "obc", "number": 318}, {"desc": "Get repartition of files on SD card", "lparam": 0, "pid": "l1datamanager", "param": [], "name": "sdGetFileLimit", "subsystem": "obc", "number": 319}, {"desc": "Reboot payload and send a getversion to freeze in that state (it will need a launch_application then)", "lparam": 0, "pid": "l1commanager", "param": [], "name": "reboot_pld", "subsystem": "obc", "number": 320}]