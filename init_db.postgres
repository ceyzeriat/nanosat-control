-- postgres

CREATE TABLE IF NOT EXISTS commands
(
	id 					serial PRIMARY KEY,
	name				varchar(125) NOT NULL
);
ALTER TABLE commands OWNER TO picsat_admin;
GRANT ALL ON commands TO picsat_admin;
GRANT select ON commands TO picsat_read;
GRANT select, insert, update ON commands TO picsat_edit;
GRANT ALL ON SEQUENCE commands_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS pids
(
	name				varchar(125) NOT NULL PRIMARY KEY,
	number				smallint,
	level_flag			smallint,
	payload_flag		smallint
);
ALTER TABLE pids OWNER TO picsat_admin;
GRANT ALL ON pids TO picsat_admin;
GRANT select ON pids TO picsat_read;
GRANT select, insert, update ON pids TO picsat_edit;
CREATE INDEX ON pids(level_flag);
CREATE INDEX ON pids(payload_flag);



CREATE TABLE IF NOT EXISTS telecommands
(
	id 						serial PRIMARY KEY,
	raw_file				varchar(125),
	time_sent				timestamp with time zone DEFAULT NULL,
	ccsds_version 			smallint CHECK (ccsds_version = 0),
	packet_type				smallint CHECK (packet_type = 1),
	secondary_header_flag	smallint CHECK (secondary_header_flag = 1),
	payload_flag			smallint,
	level_flag				smallint,
	pid 					smallint,
	packet_category			smallint DEFAULT 0,
	sequence_flag			smallint DEFAULT 3,
	packet_id				smallint,
	data_length				smallint,
	reqack_reception		smallint,
	reqack_format			smallint,
	reqack_execution		smallint,
	telecommand_id			smallint,
	emitter_id				smallint,
	ack_reception_id		integer,
	ack_format_id			integer,
	ack_execution_id		integer
);
ALTER TABLE telecommands OWNER TO picsat_admin;
GRANT ALL ON telecommands TO picsat_admin;
GRANT select ON telecommands TO picsat_read;
GRANT select, insert, update ON telecommands TO picsat_edit;
CREATE INDEX ON telecommands(time_sent);
CREATE INDEX ON telecommands(payload_flag);
CREATE INDEX ON telecommands(level_flag);
CREATE INDEX ON telecommands(pid);
CREATE INDEX ON telecommands(packet_id);
CREATE INDEX ON telecommands(reqack_reception);
CREATE INDEX ON telecommands(reqack_format);
CREATE INDEX ON telecommands(reqack_execution);
CREATE INDEX ON telecommands(telecommand_id);
CREATE INDEX ON telecommands(emitter_id);
CREATE INDEX ON telecommands(ack_reception_id);
CREATE INDEX ON telecommands(ack_format_id);
CREATE INDEX ON telecommands(ack_execution_id);
ALTER TABLE telecommands ADD FOREIGN KEY (pid) REFERENCES pids (name);
ALTER TABLE telecommands ADD FOREIGN KEY (telecommand_id) REFERENCES commands (id);
GRANT ALL ON SEQUENCE telecommands_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS telecommand_data
(
	id 					integer,
	param_key			varchar(25) NOT NULL,
	value 				text DEFAULT '',
	PRIMARY KEY(id, param_key)
);
ALTER TABLE telecommand_data OWNER TO picsat_admin;
GRANT ALL ON telecommand_data TO picsat_admin;
GRANT select ON telecommand_data TO picsat_read;
GRANT select, insert, update ON telecommand_data TO picsat_edit;
ALTER TABLE telecommand_data ADD FOREIGN KEY (id) REFERENCES telecommands (id);


CREATE TABLE IF NOT EXISTS packet_categories
(
	id 					serial PRIMARY KEY,
	name				varchar(125) NOT NULL
);
ALTER TABLE packet_categories OWNER TO picsat_admin;
GRANT ALL ON packet_categories TO picsat_admin;
GRANT select ON packet_categories TO picsat_read;
GRANT select, insert, update ON packet_categories TO picsat_edit;
GRANT ALL ON SEQUENCE packet_categories_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS receivers
(
	id 					serial PRIMARY KEY,
	name				varchar(125) NOT NULL,
	location_lat		real,
	location_lon		real,
	location_alt		real,
	equipment			text
);
ALTER TABLE receivers OWNER TO picsat_admin;
GRANT ALL ON receivers TO picsat_admin;
GRANT select ON receivers TO picsat_read;
GRANT select, insert, update ON receivers TO picsat_edit;
GRANT ALL ON SEQUENCE receivers_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS telemetries
(
	id						serial PRIMARY KEY,
	raw_file				varchar(125),
	time_sent				timestamp with time zone DEFAULT now(),
	time_received			timestamp with time zone DEFAULT now(),
	time_saved				timestamp with time zone DEFAULT now(),
	ccsds_version			smallint CHECK (ccsds_version = 0),
	packet_type				smallint CHECK (packet_type = 0),
	secondary_header_flag	smallint CHECK (secondary_header_flag = 1),
	payload_flag			smallint,
	level_flag				smallint,
	pid						smallint,
	packet_category			smallint,
	sequence_flag			smallint DEFAULT 3,
	packet_id				smallint,
	data_length				smallint,
	days_since_ref			smallint,
	ms_since_today			integer,
	receiver_id				smallint
);
ALTER TABLE telemetries OWNER TO picsat_admin;
GRANT ALL ON telemetries TO picsat_admin;
GRANT select ON telemetries TO picsat_read;
GRANT select, insert, update ON telemetries TO picsat_edit;
CREATE INDEX ON telemetries(time_sent);
CREATE INDEX ON telemetries(time_received);
CREATE INDEX ON telemetries(time_saved);
CREATE INDEX ON telemetries(payload_flag);
CREATE INDEX ON telemetries(level_flag);
CREATE INDEX ON telemetries(pid);
CREATE INDEX ON telemetries(packet_category);
CREATE INDEX ON telemetries(packet_id);
CREATE INDEX ON telemetries(days_since_ref);
CREATE INDEX ON telemetries(ms_since_today);
CREATE INDEX ON telemetries(receiver_id);
ALTER TABLE telemetries ADD FOREIGN KEY (pid) REFERENCES pids (name);
ALTER TABLE telemetries ADD FOREIGN KEY (packet_category) REFERENCES packet_categories (id);
ALTER TABLE telemetries ADD FOREIGN KEY (receiver_id) REFERENCES receivers (id);
GRANT ALL ON SEQUENCE telemetries_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS tmcat_fmt_acknowledgements
(
	id 					serial PRIMARY KEY,
	telemetry_packet	integer UNIQUE,
	telecommand_id		smallint,
	packet_id_mirror	smallint,
	error_code			smallint
);
ALTER TABLE tmcat_fmt_acknowledgements OWNER TO picsat_admin;
GRANT ALL ON tmcat_fmt_acknowledgements TO picsat_admin;
GRANT select ON tmcat_fmt_acknowledgements TO picsat_read;
GRANT select, insert, update ON tmcat_fmt_acknowledgements TO picsat_edit;
CREATE INDEX ON tmcat_fmt_acknowledgements(telemetry_packet);
CREATE INDEX ON tmcat_fmt_acknowledgements(telecommand_id);
CREATE INDEX ON tmcat_fmt_acknowledgements(packet_id_mirror);
CREATE INDEX ON tmcat_fmt_acknowledgements(error_code);
ALTER TABLE tmcat_fmt_acknowledgements ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
ALTER TABLE tmcat_fmt_acknowledgements ADD FOREIGN KEY (telecommand_id) REFERENCES commands (id);
GRANT ALL ON SEQUENCE tmcat_fmt_acknowledgements_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS tmcat_exe_acknowledgements
(
	id 					serial PRIMARY KEY,
	telemetry_packet	integer UNIQUE,
	telecommand_id		smallint,
	packet_id_mirror	smallint,
	error_code			smallint
);
ALTER TABLE tmcat_exe_acknowledgements OWNER TO picsat_admin;
GRANT ALL ON tmcat_exe_acknowledgements TO picsat_admin;
GRANT select ON tmcat_exe_acknowledgements TO picsat_read;
GRANT select, insert, update ON tmcat_exe_acknowledgements TO picsat_edit;
CREATE INDEX ON tmcat_exe_acknowledgements(telemetry_packet);
CREATE INDEX ON tmcat_exe_acknowledgements(telecommand_id);
CREATE INDEX ON tmcat_exe_acknowledgements(packet_id_mirror);
CREATE INDEX ON tmcat_exe_acknowledgements(error_code);
ALTER TABLE tmcat_exe_acknowledgements ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
ALTER TABLE tmcat_exe_acknowledgements ADD FOREIGN KEY (telecommand_id) REFERENCES commands (id);

ALTER TABLE telecommands ADD FOREIGN KEY (ack_reception_id) REFERENCES tmcat_rcp_acknowledgements (id);
ALTER TABLE telecommands ADD FOREIGN KEY (ack_format_id) REFERENCES tmcat_fmt_acknowledgements (id);
ALTER TABLE telecommands ADD FOREIGN KEY (ack_execution_id) REFERENCES tmcat_exe_acknowledgements (id);
GRANT ALL ON SEQUENCE tmcat_exe_acknowledgements_id_seq TO picsat_edit;


ALTER TABLE telecommands ADD COLUMN time_given timestamp with time zone DEFAULT now();
CREATE INDEX ON telecommands(time_given);

ALTER TABLE telecommand_data ALTER COLUMN param_key TYPE varchar(25);
ALTER TABLE telecommand_data ALTER COLUMN param_key SET NOT NULL;


CREATE TABLE IF NOT EXISTS tmcat_hf_sciences
(
	id 					serial PRIMARY KEY,
	telemetry_packet	integer UNIQUE,
	acq_mode			smallint,
	integration_time	smallint,
	modulation			smallint,
	radius				smallint,
	n_points			smallint
);
ALTER TABLE tmcat_hf_sciences OWNER TO picsat_admin;
GRANT ALL ON tmcat_hf_sciences TO picsat_admin;
GRANT select ON tmcat_hf_sciences TO picsat_read;
GRANT select, insert, update ON tmcat_hf_sciences TO picsat_edit;
CREATE INDEX ON tmcat_hf_sciences(telemetry_packet);
ALTER TABLE tmcat_hf_sciences ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
GRANT ALL ON SEQUENCE tmcat_hf_sciences_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS tmcat_payload_hks
(
	id 					serial PRIMARY KEY,
	telemetry_packet	integer UNIQUE
);
ALTER TABLE tmcat_payload_hks OWNER TO picsat_admin;
GRANT ALL ON tmcat_payload_hks TO picsat_admin;
GRANT select ON tmcat_payload_hks TO picsat_read;
GRANT select, insert, update ON tmcat_payload_hks TO picsat_edit;
CREATE INDEX ON tmcat_payload_hks(telemetry_packet);
ALTER TABLE tmcat_payload_hks ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
GRANT ALL ON SEQUENCE tmcat_payload_hks_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS data_payload_hks
(
	id 						serial PRIMARY KEY,
	telemetry_packet		integer UNIQUE,
	volt_5V					real,
	current_5V				real,
	current_3V				real,
	volt_piezo				real,
	current_piezo			real,
	current_peltier			real,
	temp_diode				real,
	volt_peltier_err		real,
	volt_peltier 			real,
	temp1					real,
	temp2					real,
	temp3					real,
	f_volt_5V				boolean DEFAULT FALSE,
	f_current_5V			boolean DEFAULT FALSE,
	f_current_3V			boolean DEFAULT FALSE,
	f_volt_piezo			boolean DEFAULT FALSE,
	f_current_piezo			boolean DEFAULT FALSE,
	f_current_peltier		boolean DEFAULT FALSE,
	f_temp_diode			boolean DEFAULT FALSE,
	f_volt_peltier_err		boolean DEFAULT FALSE,
	f_volt_peltier 			boolean DEFAULT FALSE,
	f_temp1					boolean DEFAULT FALSE,
	f_temp2					boolean DEFAULT FALSE,
	f_temp3					boolean DEFAULT FALSE
);
ALTER TABLE data_payload_hks OWNER TO picsat_admin;
GRANT ALL ON data_payload_hks TO picsat_admin;
GRANT select ON data_payload_hks TO picsat_read;
GRANT select, insert, update ON data_payload_hks TO picsat_edit;
CREATE INDEX ON data_payload_hks(telemetry_packet);
ALTER TABLE data_payload_hks ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
GRANT ALL ON SEQUENCE data_payload_hks_id_seq TO picsat_edit;


CREATE TABLE IF NOT EXISTS data_hf_sciences
(
	id 					serial PRIMARY KEY,
	telemetry_packet	integer,
	step				integer,
	counts				integer,
	x_com				integer,
	y_com				integer,
	x_pos				integer,
	y_pos				integer 
);
ALTER TABLE data_hf_sciences OWNER TO picsat_admin;
GRANT ALL ON data_hf_sciences TO picsat_admin;
GRANT select ON data_hf_sciences TO picsat_read;
GRANT select, insert, update ON data_hf_sciences TO picsat_edit;
CREATE INDEX ON data_hf_sciences(telemetry_packet);
ALTER TABLE data_hf_sciences ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
GRANT ALL ON SEQUENCE data_hf_sciences_id_seq TO picsat_edit;


ALTER TABLE data_payload_hks RENAME voltage_peltier TO volt_peltier;
ALTER TABLE data_payload_hks RENAME voltage_peltier_err TO volt_peltier_err;
ALTER TABLE data_payload_hks RENAME f_voltage_peltier_err TO f_volt_peltier_err;
ALTER TABLE data_payload_hks RENAME f_voltage_peltier TO f_volt_peltier;




-- ###########################################



ALTER TABLE tmcat_fmt_acknowledgements RENAME telecommand_id TO telecommand_id_mirror;
ALTER TABLE tmcat_exe_acknowledgements RENAME telecommand_id TO telecommand_id_mirror;


DROP TABLE IF EXISTS emitters CASCADE;


ALTER TABLE pids DROP CONSTRAINT pids_pkey CASCADE;
CREATE INDEX ON pids(number);
ALTER TABLE pids ADD CONSTRAINT pids_pkey PRIMARY KEY(number, level_flag, payload_flag);

ALTER TABLE telecommands ALTER COLUMN data_length TYPE smallint;
UPDATE telecommands AS t SET pid=p.number FROM pids AS p WHERE t.pid=p.name;
ALTER TABLE telecommands ALTER COLUMN pid TYPE smallint USING (trim(pid)::smallint);
ALTER TABLE telecommands ADD FOREIGN KEY (pid, level_flag, payload_flag)
      REFERENCES pids (number, level_flag, payload_flag) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE receivers RENAME TO users;
ALTER INDEX receivers_pkey RENAME TO users_pkey;
ALTER SEQUENCE receivers_id_seq RENAME TO users_id_seq;


ALTER TABLE telemetries ALTER COLUMN data_length TYPE smallint;
UPDATE telemetries AS t SET pid=p.number FROM pids AS p WHERE t.pid=p.name;
ALTER TABLE telemetries ALTER COLUMN pid TYPE smallint USING (trim(pid)::smallint);
ALTER TABLE telemetries ADD FOREIGN KEY (pid, level_flag, payload_flag)
      REFERENCES pids (number, level_flag, payload_flag) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION;


ALTER TABLE telecommands DROP CONSTRAINT telecommands_ack_reception_id_fkey;
ALTER TABLE telecommands DROP CONSTRAINT telecommands_ack_format_id_fkey;
ALTER TABLE telecommands DROP CONSTRAINT telecommands_ack_execution_id_fkey;

ALTER TABLE telecommands ADD FOREIGN KEY (ack_reception_id) REFERENCES telemetries (id);
ALTER TABLE telecommands ADD FOREIGN KEY (ack_format_id) REFERENCES telemetries (id);
ALTER TABLE telecommands ADD FOREIGN KEY (ack_execution_id) REFERENCES telemetries (id);
DROP TABLE IF EXISTS tmcat_rcp_acknowledgements CASCADE;


ALTER TABLE telecommands ALTER COLUMN ack_reception_id TYPE integer;
ALTER TABLE telecommands ALTER COLUMN ack_format_id TYPE integer;
ALTER TABLE telecommands ALTER COLUMN ack_execution_id TYPE integer;


ALTER TABLE telecommands RENAME emitter_id TO user_id;
ALTER INDEX telecommands_emitter_id_idx RENAME TO telecommands_user_id_idx;
ALTER TABLE telemetries RENAME receiver_id TO user_id;
CREATE INDEX ON telemetries(user_id);


ALTER TABLE telemetries ALTER COLUMN time_sent DROP DEFAULT;
ALTER TABLE telemetries ALTER COLUMN time_received DROP DEFAULT;


DROP TABLE IF EXISTS tmcat_debugs CASCADE;


CREATE TABLE IF NOT EXISTS data_exe_acknowledgements
(
	id 					serial PRIMARY KEY,
	telemetry_packet	integer,
	error_message		varchar(125) DEFAULT ''
);
ALTER TABLE data_exe_acknowledgements OWNER TO picsat_admin;
GRANT ALL ON data_exe_acknowledgements TO picsat_admin;
GRANT select ON data_exe_acknowledgements TO picsat_read;
GRANT select, insert, update ON data_exe_acknowledgements TO picsat_edit;
CREATE INDEX ON data_exe_acknowledgements(telemetry_packet);
ALTER TABLE data_exe_acknowledgements ADD FOREIGN KEY (telemetry_packet) REFERENCES telemetries (id);
GRANT ALL ON SEQUENCE data_exe_acknowledgements_id_seq TO picsat_edit;


ALTER TABLE packet_categories DROP COLUMN id CASCADE;
TRUNCATE TABLE packet_categories;
ALTER TABLE packet_categories ADD COLUMN number smallint NOT NULL;
ALTER TABLE packet_categories ADD COLUMN payload_flag smallint NOT NULL;
CREATE INDEX ON packet_categories(number);
CREATE INDEX ON packet_categories(payload_flag);
ALTER TABLE packet_categories ADD CONSTRAINT packet_categories_pkey PRIMARY KEY(number, payload_flag);
ALTER TABLE telemetries ADD FOREIGN KEY (packet_category, payload_flag)
      REFERENCES packet_categories (number, payload_flag) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION;


ALTER TABLE pids ALTER COLUMN number SET NOT NULL;
ALTER TABLE pids ALTER COLUMN level_flag SET NOT NULL;
ALTER TABLE pids ALTER COLUMN payload_flag SET NOT NULL;



ALTER TABLE data_payload_hks RENAME volt_5v TO volt5;
ALTER TABLE data_payload_hks RENAME current_5v TO amp5;
ALTER TABLE data_payload_hks RENAME current_3v TO amp3;
ALTER TABLE data_payload_hks RENAME volt_piezo TO volthv;
ALTER TABLE data_payload_hks RENAME current_piezo TO amphv;
ALTER TABLE data_payload_hks RENAME volt_peltier TO vref;
ALTER TABLE data_payload_hks RENAME current_peltier TO vitec;
ALTER TABLE data_payload_hks RENAME temp_diode TO temp0;
ALTER TABLE data_payload_hks RENAME volt_peltier_err TO errortherm;
