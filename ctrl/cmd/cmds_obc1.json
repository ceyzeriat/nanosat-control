[{"number": 300, "param": [["message", "message", "*", "str", "10", "ASCII", "abcdefghij"]], "pid": "l1commanager", "desc": "Picsat receives a message (up to 10 chars) and replies with the same message", "lparam": 10, "subsystem": "obc", "name": "echoL1"}, {"number": 301, "param": [["part", "part of the L1 HK to get (part1 or part2)", "1_2", "uint8", "1", "", ""]], "pid": "l1commanager", "desc": "Triggers transmission of all l1 HK", "lparam": 1, "subsystem": "all_l0", "name": "getL1Hk"}, {"number": 302, "param": [["address", "I2C address", "*", "int32", "1", "", ""], ["busDataSize", "allowed values: 1;(TCPACKET_MAX_DATA_SIZE-6)", "*", "uint16", "1", "", ""], ["busData", "uint8[busDataSize]", "*", "uint8", "*", "", ""]], "pid": "l1commanager", "desc": "Use I2C to forward a commad to a subsystem, directly on the I2C address", "lparam": 7, "subsystem": "obc", "name": "i2cWriteL1"}, {"number": 303, "param": [["address", "I2C address", "*", "int32", "1", "", ""]], "pid": "l1commanager", "desc": "Use I2C to forward a commad to a subsystem, directly on the I2C address, then reads I2C after a delay and emits the reply in a telemetry", "lparam": 4, "subsystem": "obc", "name": "i2cWriteReadL1"}, {"number": 304, "param": [["TimerProc", "ProcessingPeriodTimer", "0_255", "uint8", "1", "timerPeriod", ""], ["TimerL1Hk", "HousekeepingPeriodTimer", "0_255", "uint8", "1", "timerPeriod", ""], ["hkStandardPeriod", "PC_AdcsHkStandard", "0_255", "uint8", "1", "timerPeriod", ""], ["hkActuatorPeriod", "PC_AdcsHkActuator", "0_255", "uint8", "1", "timerPeriod", ""], ["hkSensorPeriod", "PC_AdcsHkSensor", "0_255", "uint8", "1", "timerPeriod", ""], ["hkAttitudePeriod", "PC_AdcsHkAttitude", "0_255", "uint8", "1", "seconds", ""], ["hkL1OBCPeriod", "PC_L1HouseKeeping", "0_255", "uint8", "1", "seconds", ""]], "pid": "l1commanager", "desc": "SetPeriods for HK and processing tasks (zero for no change)", "lparam": 7, "subsystem": "obc", "name": "setL1Periods"}, {"number": 305, "param": [], "pid": "l1commanager", "desc": "GetPeriods for HK and processing tasks", "lparam": 0, "subsystem": "obc", "name": "getL1Periods"}, {"number": 306, "param": [["sstateProc", "1 for no reduction- 2 for reduction- 3 for reduction and direct sending of light version of data", "0_255", "uint8", "1", "", ""], ["sstatePldCom", "1 to disable UART - 2 for Payload Bootloader - 3 for science", "0_255", "uint8", "1", "", ""], ["sstateDataMgm", "1 to send basic data - 2 to also send science data", "0_255", "uint8", "1", "", ""], ["sstateSdCard", "1 to use SD Card - 2 to not use SD Card", "0_255", "uint8", "1", "", ""]], "pid": "l1commanager", "desc": "Set Substates of L1 processes (zero for no change)", "lparam": 4, "subsystem": "obc", "name": "setL1Substates"}, {"number": 307, "param": [], "pid": "l1commanager", "desc": "Get Substates of L1 processes (Processing, UART, DataManagement and SD card processes)", "lparam": 0, "subsystem": "obc", "name": "getL1Substates"}, {"number": 308, "param": [], "pid": "l1commanager", "desc": "Clear all data schedule for latter", "lparam": 0, "subsystem": "obc", "name": "clearL1SchedulerFifo"}, {"number": 309, "param": [], "pid": "l1commanager", "desc": "Trigger downloading of all scheduled data (for verification)", "lparam": 0, "subsystem": "obc", "name": "getL1SchedulerFifo"}, {"number": 310, "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""], ["SequenceID", "sequence of ID (if nul -> all data will be retreived)", "0_16383", "uint16", "*", "", ""]], "pid": "l1datamanager", "desc": "Select some data to download", "lparam": "*", "subsystem": "obc", "name": "getL1Data"}, {"number": 311, "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""]], "pid": "l1datamanager", "desc": "Select some data to download", "lparam": 13, "subsystem": "obc", "name": "getL1DataCounter"}, {"number": 312, "param": [], "pid": "l1datamanager", "desc": "clear science Fifo of what there is to download", "lparam": 0, "subsystem": "obc", "name": "clearL1DownloadFifo"}, {"number": 313, "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""], ["SequenceID", "sequence of ID (if nul -> all data will be retreived)", "0_16383", "uint16", "*", "", ""]], "pid": "l1datamanager", "desc": "Select some data to download", "lparam": "*", "subsystem": "obc", "name": "sdGetL1Data"}, {"number": 314, "param": [["category", "category of the files to retreive", "0_31", "uint8", "1", "", ""], ["dateStart", "date of starting range", "*", "uint16", "1", "", ""], ["msCountStart", "ms of strating range", "*", "uint32", "1", "", ""], ["dateEnd", "Last date of interest", "*", "uint16", "1", "", ""], ["msCountEnd", "Last ms of interest", "*", "uint32", "1", "", ""]], "pid": "l1datamanager", "desc": "Select some data to download", "lparam": 13, "subsystem": "obc", "name": "sdGetL1DataCounter"}, {"number": 317, "param": [], "pid": "l1datamanager", "desc": "format sd card", "lparam": 0, "subsystem": "obc", "name": "sdFormat"}, {"number": 318, "param": [["mfnHkPld", "Maximum files of HK from payload", "*", "uint32", "1", "", ""], ["mfnLowFreq", "Maximum files of Low frequency (reduced) data", "*", "uint32", "1", "", ""], ["mfnHighFreq", "Maximum files of High frequency (raw) data", "*", "uint32", "1", "", ""], ["mfnTechno", "Maximum files of TEchno files from payload (ack, etc...)", "*", "uint32", "1", "", ""], ["mfnHkL1", "Maximum files of HK from L1", "*", "uint32", "1", "", ""]], "pid": "l1datamanager", "desc": "Number of files to be stored according to category", "lparam": 20, "subsystem": "obc", "name": "sdSetFileLimit"}, {"number": 319, "param": [], "pid": "l1datamanager", "desc": "Get repartition of files on SD card", "lparam": 0, "subsystem": "obc", "name": "sdGetFileLimit"}, {"number": 316, "param": [["pathToFile", "string with name of file to be deleted", "*", "str", "*", "", "toto?.d*"]], "pid": "l1datamanager", "desc": "rm file from SD (accept ? in the datastring as a character)", "lparam": "*", "subsystem": "obc", "name": "sdRmFile"}, {"number": 315, "name": "sdLsFile", "lparam": "*", "desc": "ls file  (accept ? in the datastring as a character)", "param": [["pathToFile", "string with name of file to be deleted", "*", "str", "*", "", "toto?.d*"]], "subsystem": "obc", "pid": "l1datamanager"}]